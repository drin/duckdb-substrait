
#include "custom_extensions/custom_extensions.hpp"

//! This class is auto-generated by scripts/generate_custom_functions.py
//! It depends on substrait/extensions yaml files
namespace duckdb {

  SubstraitCustomFunctions SubstraitCustomFunctions::InitializedForDuckDB() {
    SubstraitCustomFunctions registry_custom_fns;

    registry_custom_fns.InsertFunctionExtension("extract", { "timestamp_tz", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract", { "precision_timestamp_tz", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract", { "timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract", { "precision_timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract", { "date" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract", { "time" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract", { "timestamp_tz", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract", { "precision_timestamp_tz", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract", { "timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract", { "precision_timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract", { "date" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract_boolean", { "timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract_boolean", { "precision_timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract_boolean", { "timestamp_tz", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract_boolean", { "precision_timestamp_tz", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("extract_boolean", { "date" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "timestamp", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "precision_timestamp", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "timestamp_tz", "interval_year", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "precision_timestamp_tz", "interval_year", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "date", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "timestamp", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "precision_timestamp", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "timestamp_tz", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "precision_timestamp_tz", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "date", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "i8", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "i16", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "i32", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "i64", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "i8", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "i16", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "i32", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "i64", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("add_intervals", { "interval_day", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("add_intervals", { "interval_year", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "timestamp", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "precision_timestamp", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "timestamp_tz", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "precision_timestamp_tz", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "timestamp_tz", "interval_year", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "precision_timestamp_tz", "interval_year", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "date", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "timestamp", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "precision_timestamp", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "timestamp_tz", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "precision_timestamp_tz", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "date", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lte", { "timestamp", "timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lte", { "precision_timestamp", "precision_timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lte", { "timestamp_tz", "timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lte", { "precision_timestamp_tz", "precision_timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lte", { "date", "date" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lte", { "interval_day", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lte", { "interval_year", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lt", { "timestamp", "timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lt", { "precision_timestamp", "precision_timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lt", { "timestamp_tz", "timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lt", { "precision_timestamp_tz", "precision_timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lt", { "date", "date" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lt", { "interval_day", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("lt", { "interval_year", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gte", { "timestamp", "timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gte", { "precision_timestamp", "precision_timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gte", { "timestamp_tz", "timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gte", { "precision_timestamp_tz", "precision_timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gte", { "date", "date" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gte", { "interval_day", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gte", { "interval_year", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gt", { "timestamp", "timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gt", { "precision_timestamp", "precision_timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gt", { "timestamp_tz", "timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gt", { "precision_timestamp_tz", "precision_timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gt", { "date", "date" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gt", { "interval_day", "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("gt", { "interval_year", "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("assume_timezone", { "timestamp", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("assume_timezone", { "precision_timestamp", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("assume_timezone", { "date", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("local_timestamp", { "timestamp_tz", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("local_timestamp", { "precision_timestamp_tz", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("strptime_time", { "string", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("strptime_date", { "string", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("strptime_timestamp", { "string", "string", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("strptime_timestamp", { "string", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("strftime", { "timestamp", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("strftime", { "precision_timestamp", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("strftime", { "timestamp_tz", "string", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("strftime", { "precision_timestamp_tz", "string", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("strftime", { "date", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("strftime", { "time", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("round_temporal", { "timestamp", "i64", "timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("round_temporal", { "precision_timestamp", "i64", "precision_timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("round_temporal", { "timestamp_tz", "i64", "string", "timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("round_temporal", { "precision_timestamp_tz", "i64", "string", "precision_timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("round_temporal", { "date", "i64", "date" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("round_temporal", { "time", "i64", "time" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("round_calendar", { "timestamp", "i64" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("round_calendar", { "precision_timestamp", "i64" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("round_calendar", { "timestamp_tz", "i64", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("round_calendar", { "precision_timestamp_tz", "i64", "string" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("round_calendar", { "date", "i64", "date" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("round_calendar", { "time", "i64", "time" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "date" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "time" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "precision_timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "precision_timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "date" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "time" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "timestamp" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "precision_timestamp_tz" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "interval_day" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "interval_year" }, "functions_datetime.yaml");
    registry_custom_fns.InsertFunctionExtension("not_equal", { "any1", "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("equal", { "any1", "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("is_not_distinct_from", { "any1", "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("is_distinct_from", { "any1", "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("lt", { "any1", "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("gt", { "any1", "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("lte", { "any1", "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("gte", { "any1", "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("between", { "any1", "any1", "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("is_null", { "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("is_not_null", { "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("is_nan", { "fp32" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("is_nan", { "fp64" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("is_finite", { "fp32" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("is_finite", { "fp64" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("is_infinite", { "fp32" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("is_infinite", { "fp64" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("nullif", { "any1", "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("coalesce", { "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("least", { "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("least_skip_null", { "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("greatest", { "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("greatest_skip_null", { "any1" }, "functions_comparison.yaml");
    registry_custom_fns.InsertFunctionExtension("point", { "fp64", "fp64" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("make_line", { "u!geometry", "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("x_coordinate", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("y_coordinate", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("num_points", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("is_empty", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("is_closed", { "geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("is_simple", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("is_ring", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("geometry_type", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("envelope", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("dimension", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("is_valid", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("collection_extract", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("collection_extract", { "u!geometry", "i8" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("flip_coordinates", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("remove_repeated_points", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("remove_repeated_points", { "u!geometry", "fp64" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("buffer", { "u!geometry", "fp64" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("centroid", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("minimum_bounding_circle", { "u!geometry" }, "functions_geometry.yaml");
    registry_custom_fns.InsertFunctionExtension("approx_count_distinct", { "any" }, "functions_aggregate_approx.yaml");
    registry_custom_fns.InsertFunctionExtension("count", { "any" }, "functions_aggregate_decimal_output.yaml");
    registry_custom_fns.InsertFunctionExtension("count", {  }, "functions_aggregate_decimal_output.yaml");
    registry_custom_fns.InsertFunctionExtension("approx_count_distinct", { "any" }, "functions_aggregate_decimal_output.yaml");
    registry_custom_fns.InsertFunctionExtension("ln", { "i64" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("ln", { "fp32" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("ln", { "fp64" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("ln", { "decimal" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("log10", { "i64" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("log10", { "fp32" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("log10", { "fp64" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("log10", { "decimal" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("log2", { "i64" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("log2", { "fp32" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("log2", { "fp64" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("log2", { "decimal" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("logb", { "i64", "i64" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("logb", { "fp32", "fp32" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("logb", { "fp64", "fp64" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("logb", { "decimal", "decimal" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("log1p", { "fp32" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("log1p", { "fp64" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("log1p", { "decimal" }, "functions_logarithmic.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "unknown", "unknown" }, "unknown.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "unknown", "unknown" }, "unknown.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "unknown", "unknown" }, "unknown.yaml");
    registry_custom_fns.InsertFunctionExtension("divide", { "unknown", "unknown" }, "unknown.yaml");
    registry_custom_fns.InsertFunctionExtension("modulus", { "unknown", "unknown" }, "unknown.yaml");
    registry_custom_fns.InsertFunctionExtension("sum", { "unknown" }, "unknown.yaml");
    registry_custom_fns.InsertFunctionExtension("avg", { "unknown" }, "unknown.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "unknown" }, "unknown.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "unknown" }, "unknown.yaml");
    registry_custom_fns.InsertFunctionExtension("count", { "unknown" }, "unknown.yaml");
    registry_custom_fns.InsertFunctionExtension("concat", { "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("concat", { "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("like", { "varchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("like", { "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("substring", { "varchar", "i32", "i32" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("substring", { "string", "i32", "i32" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("substring", { "fixedchar", "i32", "i32" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("substring", { "varchar", "i32" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("substring", { "string", "i32" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("substring", { "fixedchar", "i32" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("regexp_match_substring", { "varchar", "varchar", "i64", "i64", "i64" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("regexp_match_substring", { "string", "string", "i64", "i64", "i64" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("regexp_match_substring_all", { "varchar", "varchar", "i64", "i64" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("regexp_match_substring_all", { "string", "string", "i64", "i64" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("starts_with", { "varchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("starts_with", { "varchar", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("starts_with", { "varchar", "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("starts_with", { "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("starts_with", { "string", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("starts_with", { "string", "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("starts_with", { "fixedchar", "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("starts_with", { "fixedchar", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("starts_with", { "fixedchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("ends_with", { "varchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("ends_with", { "varchar", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("ends_with", { "varchar", "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("ends_with", { "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("ends_with", { "string", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("ends_with", { "string", "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("ends_with", { "fixedchar", "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("ends_with", { "fixedchar", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("ends_with", { "fixedchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("contains", { "varchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("contains", { "varchar", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("contains", { "varchar", "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("contains", { "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("contains", { "string", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("contains", { "string", "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("contains", { "fixedchar", "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("contains", { "fixedchar", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("contains", { "fixedchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("strpos", { "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("strpos", { "varchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("strpos", { "fixedchar", "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("regexp_strpos", { "varchar", "varchar", "i64", "i64" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("regexp_strpos", { "string", "string", "i64", "i64" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("count_substring", { "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("count_substring", { "varchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("count_substring", { "fixedchar", "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("regexp_count_substring", { "string", "string", "i64" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("regexp_count_substring", { "varchar", "varchar", "i64" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("regexp_count_substring", { "fixedchar", "fixedchar", "i64" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("replace", { "string", "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("replace", { "varchar", "varchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("concat_ws", { "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("concat_ws", { "varchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("repeat", { "string", "i64" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("repeat", { "varchar", "i64", "i64" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("reverse", { "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("reverse", { "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("reverse", { "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("replace_slice", { "string", "i64", "i64", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("replace_slice", { "varchar", "i64", "i64", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("lower", { "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("lower", { "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("lower", { "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("upper", { "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("upper", { "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("upper", { "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("swapcase", { "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("swapcase", { "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("swapcase", { "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("capitalize", { "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("capitalize", { "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("capitalize", { "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("title", { "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("title", { "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("title", { "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("initcap", { "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("initcap", { "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("initcap", { "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("char_length", { "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("char_length", { "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("char_length", { "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("bit_length", { "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("bit_length", { "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("bit_length", { "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("octet_length", { "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("octet_length", { "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("octet_length", { "fixedchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("regexp_replace", { "string", "string", "string", "i64", "i64" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("regexp_replace", { "varchar", "varchar", "varchar", "i64", "i64" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("ltrim", { "varchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("ltrim", { "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("rtrim", { "varchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("rtrim", { "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("trim", { "varchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("trim", { "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("lpad", { "varchar", "i32", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("lpad", { "string", "i32", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("rpad", { "varchar", "i32", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("rpad", { "string", "i32", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("center", { "varchar", "i32", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("center", { "string", "i32", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("left", { "varchar", "i32" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("left", { "string", "i32" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("right", { "varchar", "i32" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("right", { "string", "i32" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("string_split", { "varchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("string_split", { "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("regexp_string_split", { "varchar", "varchar" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("regexp_string_split", { "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("string_agg", { "string", "string" }, "functions_string.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "i8", "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "i16", "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "i32", "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "i64", "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "fp32", "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "fp64", "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "i8", "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "i16", "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "i32", "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "i64", "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "fp32", "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "fp64", "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "i8", "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "i16", "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "i32", "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "i64", "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "fp32", "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "fp64", "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("divide", { "i8", "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("divide", { "i16", "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("divide", { "i32", "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("divide", { "i64", "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("divide", { "fp32", "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("divide", { "fp64", "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("negate", { "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("negate", { "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("negate", { "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("negate", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("negate", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("negate", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("modulus", { "i8", "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("modulus", { "i16", "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("modulus", { "i32", "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("modulus", { "i64", "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("power", { "i64", "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("power", { "fp32", "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("power", { "fp64", "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sqrt", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sqrt", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sqrt", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("exp", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("exp", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("exp", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("cos", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("cos", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sin", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sin", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("tan", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("tan", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("cosh", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("cosh", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sinh", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sinh", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("tanh", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("tanh", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("acos", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("acos", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("asin", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("asin", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("atan", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("atan", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("acosh", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("acosh", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("asinh", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("asinh", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("atanh", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("atanh", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("atan2", { "fp32", "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("atan2", { "fp64", "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("radians", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("radians", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("degrees", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("degrees", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("abs", { "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("abs", { "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("abs", { "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("abs", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("abs", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("abs", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sign", { "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sign", { "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sign", { "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sign", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sign", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sign", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("factorial", { "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("factorial", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_not", { "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_not", { "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_not", { "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_not", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_and", { "i8", "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_and", { "i16", "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_and", { "i32", "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_and", { "i64", "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_or", { "i8", "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_or", { "i16", "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_or", { "i32", "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_or", { "i64", "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_xor", { "i8", "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_xor", { "i16", "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_xor", { "i32", "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_xor", { "i64", "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sum", { "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sum", { "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sum", { "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sum", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sum", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sum", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sum0", { "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sum0", { "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sum0", { "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sum0", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sum0", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("sum0", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("avg", { "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("avg", { "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("avg", { "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("avg", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("avg", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("avg", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("product", { "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("product", { "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("product", { "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("product", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("product", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("product", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("std_dev", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("std_dev", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("variance", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("variance", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("corr", { "fp32", "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("corr", { "fp64", "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("mode", { "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("mode", { "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("mode", { "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("mode", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("mode", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("mode", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("median", { "i8" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("median", { "i16" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("median", { "i32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("median", { "i64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("median", { "fp32" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("median", { "fp64" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("quantile", { "i64", "any" }, "functions_arithmetic.yaml");
    registry_custom_fns.InsertFunctionExtension("ceil", { "fp32" }, "functions_rounding.yaml");
    registry_custom_fns.InsertFunctionExtension("ceil", { "fp64" }, "functions_rounding.yaml");
    registry_custom_fns.InsertFunctionExtension("floor", { "fp32" }, "functions_rounding.yaml");
    registry_custom_fns.InsertFunctionExtension("floor", { "fp64" }, "functions_rounding.yaml");
    registry_custom_fns.InsertFunctionExtension("round", { "i8", "i32" }, "functions_rounding.yaml");
    registry_custom_fns.InsertFunctionExtension("round", { "i16", "i32" }, "functions_rounding.yaml");
    registry_custom_fns.InsertFunctionExtension("round", { "i32", "i32" }, "functions_rounding.yaml");
    registry_custom_fns.InsertFunctionExtension("round", { "i64", "i32" }, "functions_rounding.yaml");
    registry_custom_fns.InsertFunctionExtension("round", { "fp32", "i32" }, "functions_rounding.yaml");
    registry_custom_fns.InsertFunctionExtension("round", { "fp64", "i32" }, "functions_rounding.yaml");
    registry_custom_fns.InsertFunctionExtension("count", { "any" }, "functions_aggregate_generic.yaml");
    registry_custom_fns.InsertFunctionExtension("count", {  }, "functions_aggregate_generic.yaml");
    registry_custom_fns.InsertFunctionExtension("any_value", { "any1" }, "functions_aggregate_generic.yaml");
    registry_custom_fns.InsertFunctionExtension("or", { "boolean?" }, "functions_boolean.yaml");
    registry_custom_fns.InsertFunctionExtension("and", { "boolean?" }, "functions_boolean.yaml");
    registry_custom_fns.InsertFunctionExtension("and_not", { "boolean?", "boolean?" }, "functions_boolean.yaml");
    registry_custom_fns.InsertFunctionExtension("xor", { "boolean?", "boolean?" }, "functions_boolean.yaml");
    registry_custom_fns.InsertFunctionExtension("not", { "boolean?" }, "functions_boolean.yaml");
    registry_custom_fns.InsertFunctionExtension("bool_and", { "boolean" }, "functions_boolean.yaml");
    registry_custom_fns.InsertFunctionExtension("bool_or", { "boolean" }, "functions_boolean.yaml");
    registry_custom_fns.InsertFunctionExtension("add", { "decimal", "decimal" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("subtract", { "decimal", "decimal" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("multiply", { "decimal", "decimal" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("divide", { "decimal", "decimal" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("modulus", { "decimal", "decimal" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("abs", { "decimal" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_and", { "DECIMAL", "DECIMAL" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_or", { "DECIMAL", "DECIMAL" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("bitwise_xor", { "DECIMAL", "DECIMAL" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("sqrt", { "DECIMAL" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("factorial", { "DECIMAL" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("power", { "DECIMAL", "DECIMAL" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("sum", { "DECIMAL" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("avg", { "DECIMAL" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("min", { "DECIMAL" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("max", { "DECIMAL" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("sum0", { "DECIMAL" }, "functions_arithmetic_decimal.yaml");
    registry_custom_fns.InsertFunctionExtension("index_in", { "any1", "list" }, "functions_set.yaml");


    return registry_custom_fns;
  }

} // namespace duckdb
